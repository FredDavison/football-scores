#!/usr/bin/env python

import sys, argparse, logging
import datetime as dt

from footie_scores import db
from footie_scores.utils.time import validate_date_str
from footie_scores import settings
from footie_scores.utils.log import start_logging
from footie_scores.interfaces import api_to_db
from footie_scores.apis.football_api import FootballAPI

logger = logging.getLogger(__name__)
start_logging()

def get_fixtures(start_date, end_date):
    validate_date_str(start_date)
    validate_date_str(end_date)
    start_date = dt.datetime.strptime(start_date, settings.DB_DATEFORMAT).date()
    end_date = dt.datetime.strptime(end_date, settings.DB_DATEFORMAT).date()
    print(start_date, end_date)
    logger.info('Fetching fixtures for date range %s to %s', start_date, end_date)
    fixtures = FootballAPI().get_fixtures_for_date(start_date=start_date, end_date=end_date)
    logger.info('Saving to db...')
    with db.session_scope() as session:
        api_to_db.save_fixtures(session, fixtures)
    logger.info('Done')

def main(*clargs):
    parser = argparse.ArgumentParser(description='Fetch fixtures from the API '
                                     'within a date range')
    parser.add_argument('start_date')
    parser.add_argument('end_date')
    args = parser.parse_args(*clargs)
    get_fixtures(args.start_date, args.end_date)

if __name__ == '__main__':
    main(sys.argv[1:])
